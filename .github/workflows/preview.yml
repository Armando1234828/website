name: check build

on:
  issue_comment:
    types: [created, edited]

jobs:
  update-comment:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/test') && (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR') }}
    steps:
      - name: comment
        id: create-or-update-comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Waiting for deployment to finish
          reactions: hourglass

      - id: get-comment-id
        run: |
          echo "COMMENT_ID=${{ steps.create-or-update-comment.outputs.comment-id }}" >> $GITHUB_ENV
          echo ${{github.event.comment.author_association}}
      - uses: actions/checkout@v3
      - uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: |
            Build Pending
            Build Failed
            Build Passed

      - name: Install and Build
        if: github.event.action != 'closed'
        run: |
          npm install --legacy-peer-deps
          npm install react-dom --legacy-peer-deps
          npm run build
        continue-on-error: true

      - name: Check Build Status
        if: always()
        id: check-build-status
        run: |
          if [ $? -eq 0 ]; then
            echo "Build succeeded."
            echo "Updating comment..."
            echo "BUILD_STATUS=succeeded" >> $GITHUB_ENV
            echo "COMMENT_BODY=Build succeeded." >> $GITHUB_ENV
            echo "LABEL=Build Passed" >> $GITHUB_ENV
          else
            echo "Build failed."
            echo "Updating comment..."
            echo "COMMENT_BODY=Build failed." >> $GITHUB_ENV
            echo "LABEL=Build Failed" >> $GITHUB_ENV
          fi

      - name: Update Comment
        if: always()
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ env.COMMENT_ID }}
          body: ${{ env.COMMENT_BODY }}
          edit-mode: 'replace'
          reactions-edit-mode: 'replace'
          reactions: ''
          
      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: ${{ env.LABEL }}

      - name: Request Review
        if: ${{ env.BUILD_STATUS == 'succeeded' }}
        uses: actions/github-script@0.10.0
        env:
          PR_NUMBER: ${{ github.event.issue.number }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = process.env.PR_NUMBER;
            const changes = await github.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            if (changes.data.length > 10) {
              const body = "This pull request cannot be merged because it modifies more than 10 files. Please reduce the number of modified files before merging.";
              const reviews = await github.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
              const existingReviews = reviews.data.filter(review => review.user.login === "github-actions[bot]");
              if (existingReviews.length === 0) {
                await github.pulls.createReview({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: prNumber,
                  event: "REQUEST_CHANGES",
                  body: body
                });
              }
            }
